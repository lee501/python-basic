# 正则表达式用来描述字符串
'''
# \d匹配一个数字，\w匹配字母或数字
.匹配任意字符
*匹配0或多个
+匹配1或多个
？匹配0或1个
{n, m} n-m个字符
\s匹配一个空格
在正则表达式中，要用'\'转义
精确匹配，使用[]表示范围，[0-9a-zA-Z\_] 匹配一个数字、字母或下划线
A|a 匹配A或a
() 组匹配，（123）匹配123
^行的开头
$行的结尾
'''

# python 使用re模块处理正则匹配
# 建议使用r前缀，不需要转译
s = r'ABC\-001' # Python的字符串
s = 'ABC\\-001' #与上面的s相同

# re用法
# 匹配返回一个Match对象，不匹配返回none
import re
re.match(样式r'^\d{3}\-\d{3, 8}$', 要匹配的字符串)

# 切分字符串
# 正常的字符串切分
"a b   c".split(' ') #=> ['a', 'b', '', '', 'c']
# 使用re切分
re.split(r'[\s\,]+', "a,b,c  d")

# 分组
# 正则表达式还有提取子串的强大功能。用()表示的就是要提取的分组（Group）
^(\d{3})-(\d{3,8})$ #定义两个组，使用group可以提取
m = re.match(r'^(\d{3})-(\d{3, 8})$', '010-9999999')
m.group(0) # '010-9999999'
m.group(1)

# 贪婪和非贪婪
\d+ 属于贪婪匹配  \d*
\d+? 非贪婪  \d*?



